/*
    Copyright Â© 2013 Pedro Cardoso Rodriguez

    coatldevbeans is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or any 
    later version.

    coatldevbeans is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with coatldevbeans.  If not, see <http://www.gnu.org/licenses/>
 */
package com.coatldev.beans;

import java.awt.Dimension;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JTextField;

/**
 *
 * @author Pedro Cardoso Rdz
 * @version 0.23
 */
public class CalendarSel extends JTextField {
    
    private CalendarDlg calendario;
    private String rep;
    private java.util.ArrayList<Date> fechas;
    public boolean cambiable;
    private boolean hayCambios;

    /**
     * Creates new form CalendarSel
     */
    public CalendarSel() {
        initComponents();
        this.setEditable(false);
        rep=null; fechas=new java.util.ArrayList<Date>();
        calendario=new CalendarDlg((javax.swing.JFrame)this.getTopLevelAncestor(),true,1,this);
        cambiable=true; hayCambios=false;
    }
    
    /** 
     * @param tipoSel Tipo de seleccion donde 1=dia (DEFAULT), 2=semana, 3=quincena
     */
    public void setSelectionType(int tipoSel){
        calendario.setTpSel(tipoSel);
    }
    
    /** Indica si se puede o no cambiar el valor actual
     * @param cambiable indica si se puede o no cambiar el valor actual
     */
    public void allowChange(boolean cambiable){
        this.cambiable=cambiable;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        int baseY=getLocationOnScreen().y;
        int despY=( placeOnTop()?getSize().height:(-1*(calendario.getHeight())) );
        if(!cambiable){ return; }
        calendario.setLocation(getLocationOnScreen().x,baseY+despY);
        calendario.setVisible(true);
    }//GEN-LAST:event_formMouseClicked
    
    private boolean placeOnTop(){
        int iniTop=getLocationOnScreen().y+getSize().height;
        int calHeight=calendario.getHeight();
        Dimension dScreen=java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        if( (iniTop+(calHeight*1.5))<(dScreen.height) ){ return true; }
        else{ return false; }
    }
    
    public void setDates(String r, java.util.ArrayList<Date> fs){
        rep=r; fechas.clear();
        for(int g=0;g<fs.size();g++){ fechas.add(fs.get(g)); }
        setText(rep); hayCambios=true;
    }
    
    /** Obtiene la(s) fecha(s) seleccionada(s)
     * @return la(s) fecha(s) seleccionada(s)
     */
    public java.util.ArrayList<Date> getSelectedDates(){ return fechas; }
    
    /** Obtiene la fecha seleccionada si se trata de un rango regresa solo la inicial
     *   en formato aaaa-mm-dd
     * @return la fecha seleccionada si se trata de un rango regresa solo la inicial
     */
    public Date getSelectedDate(){
        if(fechas.size()<1){ return null; }
        return fechas.get(0);
    }
    
    /** Obtiene el dia de la fecha seleccionada si se trata de un rango regresa solo la inicial
     * @return el dia de la fecha seleccionada si se trata de un rango regresa solo la inicial
     */
    public int getDay(){
        if(fechas.size()<1){ return 0; }
        Calendar cal=Calendar.getInstance();
        cal.setTime(getSelectedDate());
        return cal.get(Calendar.DATE);
    }
    
    /** Obtiene el mes de la fecha seleccionada si se trata de un rango regresa solo la inicial
     * @return el mes de la fecha seleccionada si se trata de un rango regresa solo la inicial
     */
    public int getMonth(){
        if(fechas.size()<1){ return 0; }
        Calendar cal=Calendar.getInstance();
        cal.setTime(getSelectedDate());
        return cal.get(Calendar.MONTH);
    }
    
    /** Obtiene el anyo de la fecha seleccionada si se trata de un rango regresa solo la inicial
     * @return el anyo de la fecha seleccionada si se trata de un rango regresa solo la inicial
     */
    public int getYear(){
        if(fechas.size()<1){ return 0; }
        Calendar cal=Calendar.getInstance();
        cal.setTime(getSelectedDate());
        return cal.get(Calendar.YEAR);
    }
            
    /** Carga la fecha recibida 
     * @param d la fecha a cargar 
     */
    public void setDate(Date d){
        if(d==null){ rep=null; fechas.clear(); setText(""); }
        else{
            Calendar cal=Calendar.getInstance();
            cal.setTime(d);
            calendario.cargaFecha(cal.get(Calendar.YEAR),cal.get(Calendar.MONTH),cal.get(Calendar.DATE));
        }
        hayCambios=true;
    }
    
    /** Obtiene la descripcion DIS dd-MES-aaaa (donde DIS=abrev dia de la semana)
     * @param d la fecha a obtener la descripcion 
     * @return la descripcion de la fecha
     */
    public String getDescDiaFecha(Date d){
        DateFormat df=DateFormat.getDateInstance(DateFormat.FULL);
        return df.format(d);
    }
        
    /** Indicar si se hicieron cambios en el valor seleccionado
     * @param hc 
     */
    public void setChages(boolean hc){ hayCambios=hc; }
    
    /** Obtiene si hay cambios en el valor seleccionado
     * @return 
     */
    public boolean hasChanges(){ return hayCambios; }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
